---
- hosts: databaseMS
  vars_files:
    - ./vars/all
  user: ubuntu
  become: yes
  tasks:

#Installing MySQL and dependencies
    - name: Install required software
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - mysql-server

# Installing nfs-commons to be able to use network sharing
    - name: Installing nfs-commons
      apt: name=nfs-common state=present

# Creating directory to host the virtual folder connected to NFS server
    - name: making shared directory
      ansible.builtin.command:
        cmd: sudo mkdir -p /mnt/shared_folder

 # Copying a file with configuration parameters into MySQL server so that it is read in
    - name: Copy .my.cnf file with root password credentials and config to second location
      become: true
      become_user: root
      template: src=./templates/master.my.cnf dest=/root/.my.cnf owner=root mode=0600
  # Removing old cnf files
    - name: Remove legacy cnf files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
  #        - /etc/my.cnf
  #        - /my.cnf
  #       - /.my.cnf
  #        - /etc/my.cnf
          - /etc/mysql/mysql.conf.d/mysqld.cnf

  # Copying a file with configuration parameters into MySQL server so that it is read in
    - name: Copy .my.cnf file with root password credentials and config to second location
      become: true
      become_user: root
      template: src=./templates/mysqld.cnf dest=/etc/mysql/mysql.conf.d/mysqld.cnf owner=root mode=0600

# Mounting folder to NFS server MySQL version
    - name:
      ansible.builtin.command:
        cmd: sudo mount 192.168.20.40:/mnt/mysql /mnt/shared_folder
      notify: 
        - start mysql
      
# Setting root parameters
    - name: Set root user password
      become: true
      become_user: root
      mysql_user:
        name: root
        login_unix_socket: /var/run/mysqld/mysqld.sock
        host: "{{ item }}"
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL,GRANT"
      with_items:
        - "{{ master_db_server_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
      notify: 
        - restart mysql


  # Removing standard anonymous users and test databases   
    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent

    - name: Remove the MySQL test database
      become: true
      action: mysql_db db=test state=absent

  # Updating passwords
    - name: Update mysql root password for all root accounts
      become: true
      mysql_user: name=root host={{ master_db_server_hostname }} password={{ mysql_root_password }} priv=*.*:ALL,GRANT
      with_items:
        - "{{ master_db_server_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
      notify: 
        - restart mysql

  # Creating wordpress users and databases
    - name: Create mysql user
      become: true
      mysql_user:
        name: "{{ migrate_db_user }}"
        password: "{{ migrate_db_password }}"
        host: "%"
        priv: "*.*:ALL,GRANT"

    - name: Create mysql database
      become: true
      mysql_db:
        name: "{{ migrate_db_name }}"
        state: present

  # Copying dump to host
    - name: Copy database
      become: true
      copy:
        src: "{{ migrate_db_import_path }}"
        dest: /tmp/backup.sql
        owner: root
        group: root
        mode: 0600

  # Restoring database
    - name: Import database
      become: true
      mysql_db:
          name: "{{ migrate_db_name }}"
          state: import
          target: /tmp/backup.sql

  # Create REPLICATION User
    - name: Create Replication user on Master server
      mysql_user:
        name: "{{ repl_user_name }}"
        host: "%"
        password: "{{ repl_user_pass }}"
        priv: "*.*:ALL,GRANT"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      notify: 
        - restart mysql

  # Running query to update site_url and home database options
    - name: SQL query for site_URL and home options
      become: true
      community.mysql.mysql_query:
        login_db: "{{ migrate_db_name }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"
        query:
        - UPDATE wordpress.wp_options SET option_value = '{{ host_ip }}' WHERE (option_id = '1');
        - UPDATE wordpress.wp_options SET option_value = '{{ host_ip }}' WHERE (option_id = '2');
        - UPDATE wordpress.wp_posts SET guid = REPLACE(guid, 'http://acme.example.org', '{{ host_ip }}') WHERE guid LIKE('http://acme.example.org/%');
        single_transaction: no
      notify: 
        - restart mysql

  # Running query to update site_url and home database options
    - name: SQL query for site_URL and home options
      become: true
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        query:
        - GRANT ALL PRIVILEGES ON wordpress.* TO '{{ migrate_db_user }}'@'%';
        - GRANT ALL PRIVILEGES ON wordpress.* TO '{{ repl_user_name }}'@'%';
        - flush privileges;
        single_transaction: no
      notify: 
        - restart mysql


  handlers:
    - name: start mysql
      service: name=mysql
               enabled=yes
               state=started

    - name: restart mysql
      service: name=mysql
               enabled=yes
               state=restarted